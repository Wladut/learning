
000TestProject.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000000fc  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002a4  080002ac  000102ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002a4  080002a4  000102ac  2**0
                  CONTENTS
  4 .ARM          00000000  080002a4  080002a4  000102ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002a4  080002ac  000102ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002a4  080002a4  000102a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002a8  080002a8  000102a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000102ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080002ac  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080002ac  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000102ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000068  00000000  00000000  000102d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000004e  00000000  00000000  0001033e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000048  00000000  00000000  00010390  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000030  00000000  00000000  000103d8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000a77  00000000  00000000  00010408  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000000c6  00000000  00000000  00010e7f  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00002d3c  00000000  00000000  00010f45  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00013c81  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000054  00000000  00000000  00013cfc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800028c 	.word	0x0800028c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800028c 	.word	0x0800028c

080001e8 <main>:
  * @brief   Default main function.
  ******************************************************************************
*/

int main(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	af00      	add	r7, sp, #0
	for(;;);
 80001ec:	e7fe      	b.n	80001ec <main+0x4>
	...

080001f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001f0:	480d      	ldr	r0, [pc, #52]	; (8000228 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001f2:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */

  ldr r0, =_sdata
 80001f4:	480d      	ldr	r0, [pc, #52]	; (800022c <LoopForever+0x6>)
  ldr r1, =_edata
 80001f6:	490e      	ldr	r1, [pc, #56]	; (8000230 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001f8:	4a0e      	ldr	r2, [pc, #56]	; (8000234 <LoopForever+0xe>)
  movs r3, #0
 80001fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001fc:	e002      	b.n	8000204 <LoopCopyDataInit>

080001fe <CopyDataInit>:

CopyDataInit:


  ldr r4, [r2, r3]
 80001fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000200:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000202:	3304      	adds	r3, #4

08000204 <LoopCopyDataInit>:

LoopCopyDataInit:


  adds r4, r0, r3
 8000204:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000206:	428c      	cmp	r4, r1



  bcc CopyDataInit
 8000208:	d3f9      	bcc.n	80001fe <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800020a:	4a0b      	ldr	r2, [pc, #44]	; (8000238 <LoopForever+0x12>)
  ldr r4, =_ebss
 800020c:	4c0b      	ldr	r4, [pc, #44]	; (800023c <LoopForever+0x16>)
  movs r3, #0
 800020e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000210:	e001      	b.n	8000216 <LoopFillZerobss>

08000212 <FillZerobss>:

FillZerobss:

  str  r3, [r2]
 8000212:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000214:	3204      	adds	r2, #4

08000216 <LoopFillZerobss>:

LoopFillZerobss:

  cmp r2, r4
 8000216:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000218:	d3fb      	bcc.n	8000212 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800021a:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800021e:	f000 f811 	bl	8000244 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000222:	f7ff ffe1 	bl	80001e8 <main>

08000226 <LoopForever>:

LoopForever:
    b LoopForever
 8000226:	e7fe      	b.n	8000226 <LoopForever>
  ldr   r0, =_estack
 8000228:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800022c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000230:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000234:	080002ac 	.word	0x080002ac
  ldr r2, =_sbss
 8000238:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800023c:	2000001c 	.word	0x2000001c

08000240 <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000240:	e7fe      	b.n	8000240 <ADC_IRQHandler>
	...

08000244 <__libc_init_array>:
 8000244:	b570      	push	{r4, r5, r6, lr}
 8000246:	4e0d      	ldr	r6, [pc, #52]	; (800027c <__libc_init_array+0x38>)
 8000248:	4c0d      	ldr	r4, [pc, #52]	; (8000280 <__libc_init_array+0x3c>)
 800024a:	1ba4      	subs	r4, r4, r6
 800024c:	10a4      	asrs	r4, r4, #2
 800024e:	2500      	movs	r5, #0
 8000250:	42a5      	cmp	r5, r4
 8000252:	d109      	bne.n	8000268 <__libc_init_array+0x24>
 8000254:	4e0b      	ldr	r6, [pc, #44]	; (8000284 <__libc_init_array+0x40>)
 8000256:	4c0c      	ldr	r4, [pc, #48]	; (8000288 <__libc_init_array+0x44>)
 8000258:	f000 f818 	bl	800028c <_init>
 800025c:	1ba4      	subs	r4, r4, r6
 800025e:	10a4      	asrs	r4, r4, #2
 8000260:	2500      	movs	r5, #0
 8000262:	42a5      	cmp	r5, r4
 8000264:	d105      	bne.n	8000272 <__libc_init_array+0x2e>
 8000266:	bd70      	pop	{r4, r5, r6, pc}
 8000268:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800026c:	4798      	blx	r3
 800026e:	3501      	adds	r5, #1
 8000270:	e7ee      	b.n	8000250 <__libc_init_array+0xc>
 8000272:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000276:	4798      	blx	r3
 8000278:	3501      	adds	r5, #1
 800027a:	e7f2      	b.n	8000262 <__libc_init_array+0x1e>
 800027c:	080002a4 	.word	0x080002a4
 8000280:	080002a4 	.word	0x080002a4
 8000284:	080002a4 	.word	0x080002a4
 8000288:	080002a8 	.word	0x080002a8

0800028c <_init>:
 800028c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800028e:	bf00      	nop
 8000290:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000292:	bc08      	pop	{r3}
 8000294:	469e      	mov	lr, r3
 8000296:	4770      	bx	lr

08000298 <_fini>:
 8000298:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800029a:	bf00      	nop
 800029c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800029e:	bc08      	pop	{r3}
 80002a0:	469e      	mov	lr, r3
 80002a2:	4770      	bx	lr
